# Generated by Django 3.2 on 2021-04-27 07:23

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import stdimage.models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0008_auto_20210206_1658'),
    ]

    operations = [
        migrations.CreateModel(
            name='Corridor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('content', models.TextField(blank=True, null=True)),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('content', models.TextField(blank=True, null=True)),
                ('start', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Garden',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('content', models.TextField(blank=True, null=True)),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Genus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('logo', stdimage.models.StdImageField(upload_to='pages')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('content', models.TextField(blank=True, null=True)),
                ('image', stdimage.models.StdImageField(upload_to='pages')),
                ('position', models.PositiveSmallIntegerField(db_index=True)),
                ('slug', models.SlugField(max_length=255)),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='Redlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Shapefile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('content', models.TextField(blank=True, null=True)),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
                ('author', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.IntegerField(choices=[(1, 'Nature'), (2, 'Connector layers'), (3, 'Transport'), (4, 'Potential sites')], db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('common_name', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('meta_data', models.JSONField(blank=True, null=True)),
                ('links', models.JSONField(blank=True, null=True)),
                ('animals', models.JSONField(blank=True, null=True)),
                ('soils', models.JSONField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('propagation_seed', models.TextField(blank=True, null=True)),
                ('propagation_cutting', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('genus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.genus')),
                ('redlist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.redlist')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.RemoveField(
            model_name='blog',
            name='tags',
        ),
        migrations.RemoveField(
            model_name='photogallery',
            name='category',
        ),
        migrations.DeleteModel(
            name='Presentation',
        ),
        migrations.DeleteModel(
            name='Project',
        ),
        migrations.DeleteModel(
            name='Publication',
        ),
        migrations.RemoveField(
            model_name='photo',
            name='gallery',
        ),
        migrations.AddField(
            model_name='photo',
            name='date',
            field=models.DateField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='photo',
            name='upload_date',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='photo',
            name='position',
            field=models.PositiveSmallIntegerField(db_index=True),
        ),
        migrations.DeleteModel(
            name='Blog',
        ),
        migrations.DeleteModel(
            name='PhotoCategory',
        ),
        migrations.DeleteModel(
            name='PhotoGallery',
        ),
        migrations.DeleteModel(
            name='Tag',
        ),
        migrations.AddField(
            model_name='garden',
            name='photo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gardens', to='core.photo'),
        ),
        migrations.AddField(
            model_name='event',
            name='photo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events', to='core.photo'),
        ),
        migrations.AddField(
            model_name='photo',
            name='event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='core.event'),
        ),
        migrations.AddField(
            model_name='photo',
            name='garden',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='core.garden'),
        ),
        migrations.AddField(
            model_name='photo',
            name='species',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='core.species'),
        ),
    ]
